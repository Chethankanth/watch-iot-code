#include <Wire.h>
#include <U8g2lib.h>
#include "MAX30105.h"
#include "spo2_algorithm.h"
#include <MPU6050_light.h>

// OLED setup
U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

// MAX30105 setup
MAX30105 particleSensor;

// SpO2 variables
uint32_t irBuffer[100];   // Infrared LED sensor data
uint32_t redBuffer[100];  // Red LED sensor data
int32_t spo2;
int8_t validSPO2;
int32_t heartRate;
int8_t validHeartRate;

// MPU6050 setup
MPU6050 mpu(Wire);

void setup() {
  Wire.begin(8, 9); // SDA = GPIO8, SCL = GPIO9 for Indus board
  Serial.begin(115200);

  // OLED
  u8g2.begin();
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_ncenB08_tr);
  u8g2.drawStr(0, 10, "Smartwatch Booting...");
  u8g2.sendBuffer();
  delay(1000);

  // MAX30105 init
  if (!particleSensor.begin(Wire, I2C_SPEED_STANDARD)) {
    Serial.println("MAX30105 not found. Check wiring.");
    while (1);
  }
  particleSensor.setup();
  particleSensor.setPulseAmplitudeRed(0x0A);   // turn Red LED to low
  particleSensor.setPulseAmplitudeGreen(0);    // turn off Green LED

  // MPU6050 init
  mpu.begin();
  mpu.calcOffsets(true, true); // Calibrate accel + gyro
  Serial.println("MPU6050 Ready");
}

void loop() {
  // --- Read MAX30105 values ---
  for (byte i = 0; i < 100; i++) {
    while (particleSensor.available() == false) particleSensor.check();
    redBuffer[i] = particleSensor.getRed();
    irBuffer[i] = particleSensor.getIR();
    particleSensor.nextSample();
  }

  // --- Calculate SpO2 and Heart Rate ---
  maxim_heart_rate_and_oxygen_saturation(irBuffer, 100, redBuffer, &spo2, &validSPO2, &heartRate, &validHeartRate);

  // --- Read MPU6050 data ---
  mpu.update();
  float tempC = mpu.getTemp();
  float accX = mpu.getAccX();
  float accY = mpu.getAccY();
  float accZ = mpu.getAccZ();
  float gyroX = mpu.getGyroX();
  float gyroY = mpu.getGyroY();
  float gyroZ = mpu.getGyroZ();

  // --- Serial Monitor Output ---
  Serial.println("=== Sensor Data ===");
  Serial.print("Heart Rate: "); Serial.print(heartRate); Serial.println(" BPM");
  Serial.print("SpO2: "); Serial.print(spo2); Serial.println(" %");
  Serial.print("Temperature: "); Serial.print(tempC); Serial.println(" Â°C");

  Serial.print("Accelerometer -> X: "); Serial.print(accX);
  Serial.print(" Y: "); Serial.print(accY);
  Serial.print(" Z: "); Serial.println(accZ);

  Serial.print("Gyroscope -> X: "); Serial.print(gyroX);
  Serial.print(" Y: "); Serial.print(gyroY);
  Serial.print(" Z: "); Serial.println(gyroZ);
  Serial.println("====================");

  // --- OLED Display ---
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_6x12_tr);
  u8g2.setCursor(0, 12);
  u8g2.print("HR: "); u8g2.print(heartRate); u8g2.print(" bpm");

  u8g2.setCursor(0, 26);
  u8g2.print("SpO2: "); u8g2.print(spo2); u8g2.print(" %");

  u8g2.setCursor(0, 40);
  u8g2.print("Temp: "); u8g2.print(tempC, 1); u8g2.print(" C");

  u8g2.sendBuffer();

  delay(1000); // Wait 1 second before next sample
}
